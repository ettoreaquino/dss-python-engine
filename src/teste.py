import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def surface_plot (matrix):
    # acquire the cartesian coordinate matrices from the matrix
    # x is cols, y is rows
    (x, y) = np.meshgrid(np.arange(matrix.shape[0]), np.arange(matrix.shape[1]))
    print(x,y)
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    surf = ax.plot_surface(x, y, matrix)
    return (fig, ax, surf)

# z = np.asarray([[1.0000944833629801, 1.0000918512784966, 1.0000745493514172, 0.9950239097309046, 0.9922874685540167, 0.991916130210951, 0.9919161279256657, 0.9912229321792447, 0.9910061976810474, 0.9942175928966674, 0.995368334198785, 0.9919161428887738, 0.9916487010113485],
# [1.0000966700911729, 1.0000948481554393, 1.000079329392177, 0.9957730806207011, 0.9932291128501081, 0.9932617941871348, 0.9932617920392761, 0.9926878380530281, 0.9924106976422488, 0.9951526915073708, 0.9960932833626933, 0.9932618068842228, 0.9930093604558724],
# [1.0000992785142602, 1.0000982651076469, 1.0000849916798464, 0.9966937821394543, 0.9939835165841929, 0.9951207636007491, 0.9951207616561422, 0.9947421003421998, 0.9942153348253853, 0.9964150492913121, 0.997034949418358, 0.9951207763258262, 0.9948547938790531],
# [1.0001010955862424, 1.000100931053742, 1.0000890994631288, 0.9973032563677507, 0.9950160027691171, 0.9960914865956285, 0.9960914847382201, 0.995780132529819, 0.9953183002505063, 0.9971012513456289, 0.9975911646535034, 0.9960914993337431, 0.9958590746118463],
# [1.0001023981823185, 1.0001025741107674, 1.0000916855316884, 0.9977141290429635, 0.9955899592682275, 0.9967964505607372, 0.9967964487346277, 0.9965005469412961, 0.996073899981281, 0.9976002537654549, 0.9979815150528036, 0.9967964633083018, 0.9965767660749723],
# [1.0001005517280595, 1.0000994532176422, 1.0000872519112147, 0.9971498354972226, 0.9939641563786644, 0.9962001836075868, 0.996200181812689, 0.995961496373683, 0.9951435207518045, 0.9971515964049722, 0.9975509226027957, 0.9962001963500005, 0.9958959676576796],
# [1.0000953587085812, 1.0000917716403992, 1.0000748232540153, 0.9951842612412761, 0.9915471616085869, 0.9926706067819725, 0.9926706043394209, 0.9918351587339289, 0.9914768349152614, 0.994695192157762, 0.9956421694252419, 0.9926706194709392, 0.9923306478976899],
# [1.0000895508712082, 1.0000832372723463, 1.0000610223730062, 0.9930575886223001, 0.9893307746795762, 0.9885823740173559, 0.988582371057883, 0.9872386939263699, 0.9873669132072089, 0.991921931315251, 0.9935267524070006, 0.9885823866451583, 0.9882362180859313],
# [1.0000832559971036, 1.0000733066827818, 1.00004450935984, 0.9903265048018288, 0.9865821922384186, 0.9834985057307759, 0.9834985014319314, 0.9808890142629646, 0.982283499361384, 0.9883672299902079, 0.9907978102217806, 0.9834985182768055, 0.9831499850699592],
# [1.000077896564837, 1.0000672266932091, 1.000035167013235, 0.9888608809741208, 0.9844458239737595, 0.980994743593839, 0.9809947395296597, 0.9786733010161421, 0.9795810405560996, 0.986595826938422, 0.9894165775103754, 0.9809947561095305, 0.9805977235157899],
# [1.0000807779936036, 1.0000703169846048, 1.000040505556278, 0.9899162764256028, 0.9853888018168722, 0.9829232523238027, 0.9829232486752378, 0.9809392126126245, 0.981471213452336, 0.9880152806172368, 0.9904862234200398, 0.982923264869426, 0.9825167744994984],
# [1.0000710181470853, 1.0000556025218066, 1.0000178794751637, 0.9865671422621485, 0.9799217271382114, 0.977521186695862, 0.9775211825157818, 0.975096263529988, 0.9754398071750873, 0.9842029476858989, 0.9874038902682394, 0.9775211991680619, 0.9769564919969561],
# [1.0000688332428844, 1.0000512378090363, 1.000011206741882, 0.985630653745641, 0.9782142992533306, 0.9761067178240591, 0.9761067132773532, 0.9733330179740745, 0.9737975077010236, 0.9832044982936646, 0.9865646121579471, 0.9761067302755492, 0.9754842104210255],
# [1.000068355613431, 1.0000529694859857, 1.0000136955234589, 0.9857411112379295, 0.9784794427630609, 0.9763929338394486, 0.9763929294686456, 0.973883273691049, 0.9741308265936225, 0.9832803800029746, 0.9866553944377887, 0.9763929462968465, 0.9757832752414889],
# [1.0000660174722302, 1.0000499422108438, 1.000008031536409, 0.9847063476777049, 0.9788362598085946, 0.9737553442557848, 0.973755339406932, 0.9707379812747106, 0.9719183766659659, 0.9815412398995509, 0.9854452013621254, 0.9737553566687872, 0.9732518372211063],
# [1.0000526836963288, 1.0000302010632691, 0.9999779344936365, 0.9803406949667703, 0.9718081480171491, 0.9665878611482219, 0.966587855959752, 0.9633091803426217, 0.9639856757070671, 0.9765348720508348, 0.9814149449688943, 0.9665878734665349, 0.9658940121261134],
# [1.000053387584785, 1.0000305512581102, 0.999979361082683, 0.9808671426709482, 0.9713615902201062, 0.9678777875953797, 0.9678777830169655, 0.9651600687900705, 0.9649850750217315, 0.9774820039838029, 0.9820642091750966, 0.9678777999388309, 0.9671118921489982],
# [1.0000275995899435, 0.999990780059651, 0.9999208199452048, 0.9726161062843965, 0.9532228082463712, 0.9568544786453619, 0.9568544735784769, 0.9539838742959236, 0.951211863306101, 0.9693853651404936, 0.9750616081463828, 0.9568544908589085, 0.9554052835990628],
# [0.9999802725222401, 0.9999235033980263, 0.9998150254258993, 0.9553275314031999, 0.930773582628171, 0.927148915556031, 0.927148906591295, 0.9208413446641357, 0.9201149795520934, 0.9482774803849032, 0.9584349518209272, 0.9271489273362237, 0.9253415704742232],
# [0.9999825667237895, 0.9999273004950757, 0.9998206629135417, 0.9559472616290584, 0.9313891361816204, 0.9285555412464066, 0.9285555319349926, 0.9220092779627547, 0.9215157466744812, 0.9490905431710079, 0.9590532757179524, 0.9285555530442176, 0.9267475860174664],
# [1.0000156627839984, 0.9999750684686188, 0.9998914317703239, 0.9667919521268884, 0.9546323580876132, 0.9427297588087887, 0.9427297507833727, 0.9368452612161576, 0.9391998079825215, 0.9598325014285684, 0.968322706544483, 0.942729770782183, 0.9418017279395031],
# [1.000025778795631, 0.999990259847279, 0.9999158672319964, 0.9709838628045353, 0.9595458681936047, 0.9500073690360131, 0.9500073625377687, 0.9455022196607711, 0.9466449714669865, 0.9650719611130482, 0.9724240106772137, 0.9500073811210431, 0.9491245917424491],
# [1.0000446837630106, 1.000017934129488, 0.9999588921928781, 0.9775510132834815, 0.9681534330238049, 0.9616029528937436, 0.9616029473021003, 0.957927639049972, 0.9587700999978608, 0.973118192269848, 0.9787342263233304, 0.9616029651420561, 0.9608521077724206],
# [1.000075414200405, 1.0000613767887, 1.0000260192793842, 0.9875872244163628, 0.9824798304534865, 0.9788808867389494, 0.9788808819798896, 0.9758625430724638, 0.9772590085481905, 0.9851487930371341, 0.9882301821193756, 0.9788808992209297, 0.9784298293380752]])

# y = np.asarray([[0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064],
# [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064]])

# x = []
# for i in range(0,24):
#     x.append(13*[i+1])

# x = np.asarray(x)

# print x


# m = np.fromfunction(lambda x, y: np.sin(np.sqrt(x**2 + y**2)), (10, 10))
# print m

# fig.colorbar(surf)

x = [1.0000944833629801, 1.0000918512784966, 1.0000745493514172, 0.9950239097309046, 0.9922874685540167, 0.991916130210951, 0.9919161279256657, 0.9912229321792447, 0.9910061976810474, 0.9942175928966674, 0.995368334198785, 0.9919161428887738, 0.9916487010113485]
y = [0.0, 0.0, 0.0, 0.762, 0.762, 1.2192, 1.2202, 1.3726, 1.55448, 0.8129016, 0.6096, 1.524, 1.31064]


fig = plt.figure()
plt.plot(y,x)


plt.show()
